// <auto-generated />
using System;
using AzsCompany.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AzsCompany.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220428182532_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AzsCompany.Domain.Azs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Azs");
                });

            modelBuilder.Entity("AzsCompany.Domain.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("AzsCompany.Domain.CompanyCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberCar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyCars");
                });

            modelBuilder.Entity("AzsCompany.Domain.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NumberIIN")
                        .HasColumnType("bigint");

                    b.Property<long>("NumberPhone")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("AzsCompany.Domain.NetAZS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AzsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AzsId");

                    b.ToTable("NetAzses");
                });

            modelBuilder.Entity("AzsCompany.Domain.Oil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Oils");
                });

            modelBuilder.Entity("AzsCompany.Domain.Payed", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<int>("NetAzsId")
                        .HasColumnType("int");

                    b.Property<int>("OilId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyCarId")
                        .HasColumnType("int");

                    b.Property<string>("AZSApplied")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AzsId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverPayed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.HasKey("CompanyId", "DriverId", "NetAzsId", "OilId", "CompanyCarId");

                    b.HasIndex("AzsId");

                    b.HasIndex("CompanyCarId");

                    b.HasIndex("DriverId");

                    b.HasIndex("NetAzsId");

                    b.HasIndex("OilId");

                    b.ToTable("Payeds");
                });

            modelBuilder.Entity("AzsCompany.Domain.CompanyCar", b =>
                {
                    b.HasOne("AzsCompany.Domain.Company", "Company")
                        .WithMany("CompanyCars")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AzsCompany.Domain.Driver", b =>
                {
                    b.HasOne("AzsCompany.Domain.Company", "Company")
                        .WithMany("Drivers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AzsCompany.Domain.NetAZS", b =>
                {
                    b.HasOne("AzsCompany.Domain.Azs", "Azs")
                        .WithMany("NetAzses")
                        .HasForeignKey("AzsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Azs");
                });

            modelBuilder.Entity("AzsCompany.Domain.Payed", b =>
                {
                    b.HasOne("AzsCompany.Domain.Azs", null)
                        .WithMany("Payeds")
                        .HasForeignKey("AzsId");

                    b.HasOne("AzsCompany.Domain.CompanyCar", "CompanyCar")
                        .WithMany("Payeds")
                        .HasForeignKey("CompanyCarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AzsCompany.Domain.Company", "Company")
                        .WithMany("Payeds")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AzsCompany.Domain.Driver", "Driver")
                        .WithMany("Payeds")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AzsCompany.Domain.NetAZS", "NetAzs")
                        .WithMany("Payeds")
                        .HasForeignKey("NetAzsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AzsCompany.Domain.Oil", "Oil")
                        .WithMany("Payeds")
                        .HasForeignKey("OilId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("CompanyCar");

                    b.Navigation("Driver");

                    b.Navigation("NetAzs");

                    b.Navigation("Oil");
                });

            modelBuilder.Entity("AzsCompany.Domain.Azs", b =>
                {
                    b.Navigation("NetAzses");

                    b.Navigation("Payeds");
                });

            modelBuilder.Entity("AzsCompany.Domain.Company", b =>
                {
                    b.Navigation("CompanyCars");

                    b.Navigation("Drivers");

                    b.Navigation("Payeds");
                });

            modelBuilder.Entity("AzsCompany.Domain.CompanyCar", b =>
                {
                    b.Navigation("Payeds");
                });

            modelBuilder.Entity("AzsCompany.Domain.Driver", b =>
                {
                    b.Navigation("Payeds");
                });

            modelBuilder.Entity("AzsCompany.Domain.NetAZS", b =>
                {
                    b.Navigation("Payeds");
                });

            modelBuilder.Entity("AzsCompany.Domain.Oil", b =>
                {
                    b.Navigation("Payeds");
                });
#pragma warning restore 612, 618
        }
    }
}
